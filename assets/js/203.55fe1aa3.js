(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{1633:function(t,e,a){"use strict";a.r(e);var s=a(44),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"小-tips：chrome-91-版本-cookie-same-site-前端本地开发解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小-tips：chrome-91-版本-cookie-same-site-前端本地开发解决方案"}},[t._v("#")]),t._v(" 小 Tips：Chrome 91 版本 Cookie Same-Site 前端本地开发解决方案")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://heroku-blog-files.s3.amazonaws.com/posts/1580745160-Same-Site%20Cookie%20Infographic.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("最近在本地开发环境测试公司系统时，遇到了跨域问题，导致无法登录获取用户权限。原本只要是本地浏览器存储了目标服务器的cookie 信息就可以发送跨域请求，但奇怪的是，已经通过开启 CORS 同源请求的方式获取到了 cookie，在本地开发环境启动的系统依然出现了跨域情况，检查发现请求根本没有自动携带 cookie。为什么开启了 CORS，还是会出现跨域的问题呢？")]),t._v(" "),a("p",[t._v("文章大纲")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("分析问题")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("跨站与跨域的区别")]),t._v(" "),a("li",[t._v("Cookie 的 Same-Site 属性")])])]),t._v(" "),a("li",[a("p",[t._v("解决问题")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("手动关闭 Same-Site")]),t._v(" "),a("li",[t._v("使用代理")])])])]),t._v(" "),a("h2",{attrs:{id:"分析问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析问题"}},[t._v("#")]),t._v(" 分析问题")]),t._v(" "),a("h3",{attrs:{id:"为什么会有跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么会有跨域问题"}},[t._v("#")]),t._v(" 为什么会有跨域问题")]),t._v(" "),a("p",[t._v("跨域本质上是 浏览器实现**同源策略（Same Origin Policy）**的一种安全手段。对于同源的定义，url 协议（protocol）、端口（port）、主机（host 域名）完全相同称为同源站点。同源策略限制了两个不同源站点的资源访问，比如前端想通过 XMLHttpRequest 将站点数据发送给不同源站点，就会产生跨域问题。")]),t._v(" "),a("p",[t._v("比如 A 源为："),a("code",[t._v("http://store.company.com/dir/page.html")]),t._v("，下列与 B 源 的对比。引用自 MDN "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#definition_of_an_origin",target:"_blank",rel:"noopener noreferrer"}},[t._v("Definition of an origin"),a("OutboundLink")],1)]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("URL")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Outcome")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Reason")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("http://store.company.com/dir2/other.html")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Same origin")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Only the path differs")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("http://store.company.com/dir/inner/another.html")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Same origin")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Only the path differs")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("https://store.company.com/page.html")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Failure")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Different protocol")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("http://store.company.com:81/dir/page.html")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Failure")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Different port ("),a("code",[t._v("http://")]),t._v(" is port 80 by default)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("http://news.company.com/dir/page.html")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Failure")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Different host")])])])]),t._v(" "),a("p",[t._v("而本地前端服务"),a("code",[t._v("http://localhost:9096")]),t._v(" 与服务端 "),a("code",[t._v("http://api.backend.com")]),t._v(" 是不同源的，存在跨域资源访问限制问题。")]),t._v(" "),a("h3",{attrs:{id:"如何解决跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何解决跨域问题"}},[t._v("#")]),t._v(" 如何解决跨域问题")]),t._v(" "),a("p",[t._v("解决跨域问题，有很多种方式，比如使用 JSONP、CORS、Proxy 等方案。在公司的项目中，使用了 CORS 方案。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/CORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("CORS"),a("OutboundLink")],1),t._v(" 跨域资源共享是为了解决同源策略的网络层面限制而引入的，它是一种基于 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/HTTP",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP"),a("OutboundLink")],1),t._v(" 头的机制，该机制通过允许服务器标示除了它自己以外的其他 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/%E6%BA%90",target:"_blank",rel:"noopener noreferrer"}},[t._v("origin"),a("OutboundLink")],1),t._v("（域，协议和端口），这样会浏览器可以访问加载这些资源。")]),t._v(" "),a("p",[t._v("如何开启呢，比如一个登录 "),a("code",[t._v("login")]),t._v(" 接口简单请求，浏览器发出的请求信息会添加 "),a("code",[t._v("origin")]),t._v(" 字段，"),a("code",[t._v("Origin")]),t._v("字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  GET /cors HTTP/1.1\n+ Origin: http://api.backend.com\n  Host: localhost:9096\n  Accept-Language: zh-CN,zh\n  Connection: keep-alive\n  User-Agent: Mozilla/5.0...\n  ...\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("如果"),a("code",[t._v("Origin")]),t._v("指定的域名在许可范围内，服务器会设置响应头 "),a("code",[t._v("Access-Control-Allow-Origin")]),t._v(" ，浏览器会检查这个字段，从而让 "),a("code",[t._v("XMLHttpRequest")]),t._v(" 正常获得结果，否则，就会抛出错误。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Access"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Origin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9096")]),t._v("\nSet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cookie"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xxxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xxx\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("同时，服务器会通过 Session-Cookie 机制维护用户的登录状态，从而使用 "),a("code",[t._v("Set-Cookie")]),t._v(" 种下一个 "),a("code",[t._v("Cookie")]),t._v("。")]),t._v(" "),a("p",[t._v("登录成功后，客户端再次发送一个 "),a("code",[t._v("getUser")]),t._v(" 接口用于获取用户权限信息，要携带之前的 Cookie 发送给服务端。")]),t._v(" "),a("p",[t._v("由于  CORS 请求默认不发送 Cookie 和 HTTP 认证信息。所以要把 Cookie 发送到服务器，需要 ajax 请求中开发 "),a("code",[t._v("withCredentials")]),t._v(" 属性 为 "),a("code",[t._v("true")]),t._v("，并且服务端要指定 "),a("code",[t._v("Access-Control-Allow-Credentials")]),t._v(" 字段：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("+ Access-Control-Allow-Credentials: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("并且"),a("code",[t._v("Access-Control-Allow-Origin")]),t._v("就不能设为星号，必须指定明确的、与请求网页一致的域名。这样，就可以实现携带 Cookie 正常访问不同源的服务端资源了。")]),t._v(" "),a("h3",{attrs:{id:"为什么开启-cors，还会出现跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么开启-cors，还会出现跨域"}},[t._v("#")]),t._v(" 为什么开启 CORS，还会出现跨域")]),t._v(" "),a("p",[t._v("通过查看浏览器的 Chrome Network 发现，登录成功后，getUser 接口发送的浏览器请求没有正常携带 Cookie 字段。")]),t._v(" "),a("p",[t._v("这是因为 Cookie 的 Same-Site 属性，跨站与跨域的区别")]),t._v(" "),a("h2",{attrs:{id:"解决问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决问题"}},[t._v("#")]),t._v(" 解决问题")]),t._v(" "),a("h3",{attrs:{id:"浏览器关闭-cookie-的-same-site"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器关闭-cookie-的-same-site"}},[t._v("#")]),t._v(" 浏览器关闭 Cookie 的 Same-Site")]),t._v(" "),a("p",[t._v("下意识的检查是不是浏览器 same-site 的设置问题，才发现浏览器 Chrome 自动升级到了 91 版本。")]),t._v(" "),a("p",[t._v("91 版本不再给关闭了。")]),t._v(" "),a("h3",{attrs:{id:"使用第三方代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用第三方代理"}},[t._v("#")]),t._v(" 使用第三方代理")]),t._v(" "),a("p",[t._v("正向代理与反向代理")]),t._v(" "),a("p",[t._v("ngixn")]),t._v(" "),a("p",[t._v("node 服务")]),t._v(" "),a("p",[t._v("webpack 提供")]),t._v(" "),a("p",[t._v("中间件")]),t._v(" "),a("h2",{attrs:{id:"拓展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拓展"}},[t._v("#")]),t._v(" 拓展")]),t._v(" "),a("h3",{attrs:{id:"对于跨域的问题，使用了代理服务后，cors-还有用吗？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于跨域的问题，使用了代理服务后，cors-还有用吗？"}},[t._v("#")]),t._v(" 对于跨域的问题，使用了代理服务后，CORS 还有用吗？")]),t._v(" "),a("p",[t._v("有用呀，只不过可以不用在目标服务器设置 CORS 了，但是代理服务器，比如 Node 服务还是需要设置的")]),t._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("本质上还是解决跨域的问题，离不开业界的方案")]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨域资源共享 CORS 详解"),a("OutboundLink")],1),t._v(" 阮一峰大佬，详细讲解了 CORS 机制对简单请求和非简单请求的两种不同处理，以及客户端和服务端的配置区别。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844904095271288840",target:"_blank",rel:"noopener noreferrer"}},[t._v("当 CORS 遇到 SameSite"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);e.default=r.exports}}]);